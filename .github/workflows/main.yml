name: Functionly build and publish

on:
  workflow_dispatch:

jobs:
  dev:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '8' 
      - name: Install dependencies
        run: npm i --no-save -q
      - name: Setup .npmrc for npmjs
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Auto Increment Version, and Publish to npmjs
        run: |
          git config --global user.email "jaystack-ci@jaystack.com"
          git config --global user.name "jaystack-ci"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          npm version patch -m "Auto-increment version: %s" --force
          npm publish --tag dev
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Git operations
        run: |
          git tag -f dev
          git push -f --tags
          git push
  stage:
    needs: dev
    runs-on: ubuntu-latest
    environment: stage
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'refs/tags/dev'

      - name: Configure npm
        run: echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Extract package version
        id: package_version
        run: echo "::set-output name=VERSION::$(jq -r .version package.json)"
        shell: bash

      - name: Configure Git
        run: |
          git config --global user.email "jaystack-ci@jaystack.com"
          git config --global user.name "jaystack-ci"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Create and push git tag
        run: |
          git tag -f stage
          git push -f --tags

      - name: Publish to npm
        run: npm dist-tag add functionly@${{ steps.package_version.outputs.VERSION }} stage
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  live:
    needs: stage
    runs-on: ubuntu-latest
    environment: live
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'refs/tags/stage'

      - name: Configure npm
        run: echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Extract package version
        id: package_version
        run: echo "::set-output name=VERSION::$(jq -r .version package.json)"
        shell: bash

      - name: Configure Git
        run: |
          git config --global user.email "jaystack-ci@jaystack.com"
          git config --global user.name "jaystack-ci"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Create and push git tag
        run: |
          git tag -f latest
          git push -f --tags

      - name: Publish to npm
        run: npm dist-tag add functionly@${{ steps.package_version.outputs.VERSION }} latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

